name: CI

on: [push]

jobs:
  build-backend-importer:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python environment
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
        architecture: x64
    - name: Install dependencies
      run: pip install -r backend/importer/requirements.txt
    - name: Run tests
      run: ./backend/importer/manage.py test
    - name: Build docker dev image
      run: docker build -f backend/importer/Dockerfile -t seppaleinen/movies_backend_importer:dev backend/importer
    - name: Push docker image
      env:
        dockerhub_password: ${{ secrets.dockerhub_password }}
      run: |
        echo "$dockerhub_password" | docker login -u "seppaleinen" --password-stdin
        docker docker push seppaleinen/movies_backend_importer:dev
 

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: npm install --prefix frontend/
    - name: Run tests
      run: npm run ci-test --prefix frontend/
    - name: Build docker dev image
      run: docker build -f frontend/Dockerfile -t seppaleinen/movies_webapp:dev frontend/
    - name: Push docker image
      env:
        dockerhub_password: ${{ secrets.dockerhub_password }}
      run: |
        echo "$dockerhub_password" | docker login -u "seppaleinen" --password-stdin
        docker docker push seppaleinen/movies_webapp:dev

  integration-tests:
    runs-on: ubuntu-latest
    needs: [build-backend-importer, build-frontend]

    steps:
    - uses: actions/checkout@v2
    - name: Pull newest docker images
      run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml pull
    - name: Start containers
      run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml up -d
    - name: Wait for services to start
      run: for i in {1..5}; do wget --spider 'http://localhost:80' >/dev/null && wget --spider 'http://localhost:8000/health' >/dev/null && exit 0; sleep 1; done && exit 1
