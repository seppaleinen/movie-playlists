# Generated by Django 2.2.3 on 2020-02-22 20:06

from django.db import migrations
import csv, json, os
from importer import models
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


def forwards(apps, schema_editor):
    if schema_editor.connection.alias != 'default':
        return
    with open(os.path.join(BASE_DIR, 'migrations/languages.csv'), mode='r') as languages:
        reader = csv.reader(languages)
        for row in reader:
            language = models.Language()
            language.iso_639_1 = row[0]
            language.iso_name = row[1]
            language.native_name = row[2]
            language.save()

    with open(os.path.join(BASE_DIR, 'migrations/countries-and-languages.csv'), mode='r') as infile:
        reader = csv.reader(infile)
        for row in reader:
            country = models.Country()
            country.iso_3166_1 = row[0]
            country.name = row[1]
            country.save()
            languages = row[3].strip().lower().split(',')
            for language_code in languages:
                try:
                    lang = models.Language.objects.get(pk=language_code.strip())
                    country.languages.add(lang)
                    country.save()
                except Exception as exc:
                    print("Could not find language: '%s'" % language_code)
                    raise exc

    with open(os.path.join(BASE_DIR, 'migrations/tmdb_languages.json'), mode='r') as languages_json:
        data = json.load(languages_json)
        for i in data:
            try:
                models.Language.objects.get(pk=i['iso_639_1'])
            except Exception as exc:
                print("Could not match %s" % i)
                raise exc

    with open(os.path.join(BASE_DIR, 'migrations/tmdb_countries.json'), mode='r') as countries_json:
        data = json.load(countries_json)
        for i in data:
            try:
                models.Country.objects.get(pk=i['iso_3166_1'])
            except Exception as exc:
                print("Could not match %s" % i)
                raise exc


class Migration(migrations.Migration):

    dependencies = [
        ('importer', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards),
    ]
